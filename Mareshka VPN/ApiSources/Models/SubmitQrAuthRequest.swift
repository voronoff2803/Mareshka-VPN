//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class SubmitQrAuthRequest: APIModel {

    public var qrAuthId: ID?

    public init(qrAuthId: ID? = nil) {
        self.qrAuthId = qrAuthId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        qrAuthId = try container.decodeIfPresent("qrAuthId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(qrAuthId, forKey: "qrAuthId")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? SubmitQrAuthRequest else { return false }
      guard self.qrAuthId == object.qrAuthId else { return false }
      return true
    }

    public static func == (lhs: SubmitQrAuthRequest, rhs: SubmitQrAuthRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
