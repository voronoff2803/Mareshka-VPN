//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EditTicketRequest: APIModel {

    public enum State: String, Codable, Equatable, CaseIterable {
        case new = "NEW"
        case answered = "ANSWERED"
        case cancelled = "CANCELLED"
    }

    public var ticketId: ID

    public var state: State?

    public init(ticketId: ID, state: State? = nil) {
        self.ticketId = ticketId
        self.state = state
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        ticketId = try container.decode("ticketId")
        state = try container.decodeIfPresent("state")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encode(ticketId, forKey: "ticketId")
        try container.encodeIfPresent(state, forKey: "state")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EditTicketRequest else { return false }
      guard self.ticketId == object.ticketId else { return false }
      guard self.state == object.state else { return false }
      return true
    }

    public static func == (lhs: EditTicketRequest, rhs: EditTicketRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
