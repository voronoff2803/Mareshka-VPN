//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class GiveSubRequest: APIModel {

    public enum DurationType: String, Codable, Equatable, CaseIterable {
        case nanos = "Nanos"
        case micros = "Micros"
        case millis = "Millis"
        case seconds = "Seconds"
        case minutes = "Minutes"
        case hours = "Hours"
        case halfDays = "HalfDays"
        case days = "Days"
        case weeks = "Weeks"
        case months = "Months"
        case years = "Years"
        case decades = "Decades"
        case centuries = "Centuries"
        case millennia = "Millennia"
        case eras = "Eras"
        case forever = "Forever"
    }

    public var duration: Int?

    public var durationType: DurationType?

    public var userId: ID?

    public init(duration: Int? = nil, durationType: DurationType? = nil, userId: ID? = nil) {
        self.duration = duration
        self.durationType = durationType
        self.userId = userId
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        duration = try container.decodeIfPresent("duration")
        durationType = try container.decodeIfPresent("durationType")
        userId = try container.decodeIfPresent("userId")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(duration, forKey: "duration")
        try container.encodeIfPresent(durationType, forKey: "durationType")
        try container.encodeIfPresent(userId, forKey: "userId")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? GiveSubRequest else { return false }
      guard self.duration == object.duration else { return false }
      guard self.durationType == object.durationType else { return false }
      guard self.userId == object.userId else { return false }
      return true
    }

    public static func == (lhs: GiveSubRequest, rhs: GiveSubRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
