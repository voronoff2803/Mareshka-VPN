//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class EmailVerificationDTO: APIModel {

    public enum State: String, Codable, Equatable, CaseIterable {
        case waitConfirm = "WAIT_CONFIRM"
        case confirmed = "CONFIRMED"
        case cancelled = "CANCELLED"
    }

    public var email: String?

    public var id: ID?

    public var state: State?

    public init(email: String? = nil, id: ID? = nil, state: State? = nil) {
        self.email = email
        self.id = id
        self.state = state
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        email = try container.decodeIfPresent("email")
        id = try container.decodeIfPresent("id")
        state = try container.decodeIfPresent("state")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(email, forKey: "email")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(state, forKey: "state")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? EmailVerificationDTO else { return false }
      guard self.email == object.email else { return false }
      guard self.id == object.id else { return false }
      guard self.state == object.state else { return false }
      return true
    }

    public static func == (lhs: EmailVerificationDTO, rhs: EmailVerificationDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
