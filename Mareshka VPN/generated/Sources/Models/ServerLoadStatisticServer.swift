//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class ServerLoadStatisticServer: APIModel {

    public var counts: [ServerLoadStatisticItem]?

    public var serverAddress: String?

    public var serverCity: String?

    public var serverCountry: String?

    public init(counts: [ServerLoadStatisticItem]? = nil, serverAddress: String? = nil, serverCity: String? = nil, serverCountry: String? = nil) {
        self.counts = counts
        self.serverAddress = serverAddress
        self.serverCity = serverCity
        self.serverCountry = serverCountry
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        counts = try container.decodeArrayIfPresent("counts")
        serverAddress = try container.decodeIfPresent("serverAddress")
        serverCity = try container.decodeIfPresent("serverCity")
        serverCountry = try container.decodeIfPresent("serverCountry")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(counts, forKey: "counts")
        try container.encodeIfPresent(serverAddress, forKey: "serverAddress")
        try container.encodeIfPresent(serverCity, forKey: "serverCity")
        try container.encodeIfPresent(serverCountry, forKey: "serverCountry")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? ServerLoadStatisticServer else { return false }
      guard self.counts == object.counts else { return false }
      guard self.serverAddress == object.serverAddress else { return false }
      guard self.serverCity == object.serverCity else { return false }
      guard self.serverCountry == object.serverCountry else { return false }
      return true
    }

    public static func == (lhs: ServerLoadStatisticServer, rhs: ServerLoadStatisticServer) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
