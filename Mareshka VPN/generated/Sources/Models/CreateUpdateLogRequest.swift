//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class CreateUpdateLogRequest: APIModel {

    public var description: String?

    public var position: Int?

    public var title: String?

    public var version: String?

    public init(description: String? = nil, position: Int? = nil, title: String? = nil, version: String? = nil) {
        self.description = description
        self.position = position
        self.title = title
        self.version = version
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        description = try container.decodeIfPresent("description")
        position = try container.decodeIfPresent("position")
        title = try container.decodeIfPresent("title")
        version = try container.decodeIfPresent("version")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(position, forKey: "position")
        try container.encodeIfPresent(title, forKey: "title")
        try container.encodeIfPresent(version, forKey: "version")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? CreateUpdateLogRequest else { return false }
      guard self.description == object.description else { return false }
      guard self.position == object.position else { return false }
      guard self.title == object.title else { return false }
      guard self.version == object.version else { return false }
      return true
    }

    public static func == (lhs: CreateUpdateLogRequest, rhs: CreateUpdateLogRequest) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
