//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class TicketDTO: APIModel {

    public enum State: String, Codable, Equatable, CaseIterable {
        case new = "NEW"
        case answered = "ANSWERED"
        case cancelled = "CANCELLED"
    }

    public var content: String?

    public var email: String?

    public var id: ID?

    public var name: String?

    public var state: State?

    public var telegram: String?

    public init(content: String? = nil, email: String? = nil, id: ID? = nil, name: String? = nil, state: State? = nil, telegram: String? = nil) {
        self.content = content
        self.email = email
        self.id = id
        self.name = name
        self.state = state
        self.telegram = telegram
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        content = try container.decodeIfPresent("content")
        email = try container.decodeIfPresent("email")
        id = try container.decodeIfPresent("id")
        name = try container.decodeIfPresent("name")
        state = try container.decodeIfPresent("state")
        telegram = try container.decodeIfPresent("telegram")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(content, forKey: "content")
        try container.encodeIfPresent(email, forKey: "email")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(name, forKey: "name")
        try container.encodeIfPresent(state, forKey: "state")
        try container.encodeIfPresent(telegram, forKey: "telegram")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? TicketDTO else { return false }
      guard self.content == object.content else { return false }
      guard self.email == object.email else { return false }
      guard self.id == object.id else { return false }
      guard self.name == object.name else { return false }
      guard self.state == object.state else { return false }
      guard self.telegram == object.telegram else { return false }
      return true
    }

    public static func == (lhs: TicketDTO, rhs: TicketDTO) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
